close all
clear all
clc
t_data=randint(9600,1)';
x=1;
si=1; %for BER rows
for d=1:100;
data=t_data(x:x+95);
x=x+96;
k=3;
n=6;
s1=size(data,2);  % Size of input matrix
j=s1/k;
constlen=7;
codegen = [171 133];    % Polynomial
trellis = poly2trellis(constlen, codegen);
codedata = convenc(data, trellis);
s2=size(codedata,2);
j=s2/4;
matrix=reshape(codedata,j,4);
intlvddata = matintrlv(matrix',2,2)'; % Interleave.
intlvddata=intlvddata';
dec=bi2de(intlvddata','left-msb');
M=16;
y = qammod(dec,M);
lendata=length(y);
pilt=3+3j;
nofpits=4;
k=1;
for i=(1:13:52)
    
    pilt_data1(i)=pilt;
    for j=(i+1:i+12);
        pilt_data1(j)=y(k);
        k=k+1;
    end
end
pilt_data1=pilt_data1';   % size of pilt_data =52
pilt_data(1:52)=pilt_data1(1:52);    % upsizing to 64
pilt_data(13:64)=pilt_data1(1:52);   % upsizing to 64
for i=1:52 
    pilt_data(i+6)=pilt_data1(i);  
end
ifft_sig=ifft(pilt_data',64);
cext_data=zeros(80,1);
cext_data(1:16)=ifft_sig(49:64);
for i=1:64
    
    cext_data(i+16)=ifft_sig(i);
end
 o=1;
for snr=0:2:50
ofdm_sig=awgn(cext_data,snr,'measured'); % Adding white Gaussian Noise
for i=1:64
    
    rxed_sig(i)=ofdm_sig(i+16);  
end
ff_sig=fft(rxed_sig,64);
for i=1:52   
    synched_sig1(i)=ff_sig(i+6); 
end
k=1;
for i=(1:13:52)   
    for j=(i+1:i+12);
        synched_sig(k)=synched_sig1(j);
        k=k+1;
    end
end
dem_data= qamdemod(synched_sig,16);
bin=de2bi(dem_data','left-msb');
bin=bin';
deintlvddata = matdeintrlv(bin,2,2); % De-Interleave
deintlvddata=deintlvddata';
deintlvddata=deintlvddata(:)';
n=6;
k=3;
decodedata =vitdec(deintlvddata,trellis,5,'trunc','hard'); 
rxed_data=decodedata;
rxed_data=rxed_data(:)';
errors=0;
c=xor(data,rxed_data);
errors=nnz(c);
BER(si,o)=errors/length(data);
o=o+1;
 end 
 si=si+1;
end 
for col=1:25;        
    ber(1,col)=0;  
for row=1:100;
        ber(1,col)=ber(1,col)+BER(row,col);
    end
end
ber=ber./100; 
figure
i=0:2:48;
semilogy(i,ber);
title('BER vs SNR');
ylabel('BER');
xlabel('SNR (dB)');
grid on
